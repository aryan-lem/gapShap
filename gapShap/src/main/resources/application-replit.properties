# Database Configuration - Supabase
spring.datasource.url=jdbc:postgresql://${SUPABASE_HOST}:5432/postgres
spring.datasource.username=${SUPABASE_USERNAME}
spring.datasource.password=${SUPABASE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Auth0 Configuration
spring.security.oauth2.client.registration.auth0.client-id=${AUTH0_CLIENT_ID}
spring.security.oauth2.client.registration.auth0.client-secret=${AUTH0_CLIENT_SECRET}
spring.security.oauth2.client.registration.auth0.scope=openid,profile,email
spring.security.oauth2.client.registration.auth0.redirect-uri=${REPLIT_URL}/login/oauth2/code/auth0
spring.security.oauth2.client.provider.auth0.issuer-uri=${AUTH0_ISSUER_URI}

# CORS Configuration
spring.web.cors.allowed-origins=${FRONTEND_URL}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=Authorization,Content-Type,X-Requested-With
spring.web.cors.allow-credentials=true

# Cookie Configuration
server.servlet.session.cookie.same-site=none
server.servlet.session.cookie.secure=true

# Auth0 additional config
auth0.audience=${spring.security.oauth2.client.provider.auth0.issuer-uri}api/v2/
auth0.logout-url=${AUTH0_ISSUER_URI}v2/logout?client_id=${AUTH0_CLIENT_ID}&returnTo=${FRONTEND_URL}